/** Arduino Pro Mini                                    *** Walk_Sounds.cpp ***
 * 
 * Библиотека звуковых вставок в приложение 
 * (на основе https://github.com/robsoncouto/arduino-songs)
 * 
 * v1.1, 22.08.2024                                   Автор:      Труфанов В.Е.
 * Copyright © 2024 tve                               Дата создания: 19.08.2024
**/

#include "Walk_Sounds.h"

// ****************************************************************************
// *      Воспроизвести музыкальный фрагмент по указанному массиву звуков     *
// *                            с заданным темпом                             *
// ****************************************************************************
void WalkSounds::Soundi(int *Melody, int MelodySize, int OneSize, int tempo = 132)
{
   // Определяем размер (количество байт) мелодии исходя из того, что каждое целое состоит 
   // из двух байт (16 бит), а на каждую ноту приходится два значения (высота тона и длительность), 
   // то есть четыре байта
   int notes = MelodySize / OneSize / 2;
   // Назначаем темп мелодии
   // (определяем продолжительность всей ноты в мс)
   int wholenote = (60000 * 4) / tempo;
   // Инициализируем позицию текущей ноты
   int divider = 0;
   // Инициализируем продолжительность ноты
   int noteDuration = 0;
   // Перебираем ноты мелодии, помня что массив включает пары: ноты + длительности
   for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) 
   {
      // Вычисляем длительность текущей ноты
      divider = Melody[thisNote + 1];
      if (divider > 0) 
      {
         noteDuration = wholenote / divider;
      } 
      // Уточняем длительность для ноты с точкой
      else if (divider < 0) 
      {
         noteDuration = wholenote / abs(divider);
         noteDuration *= 1.5; 
      }
      else {}
      // Воспроизводим ноту только в течение 90% ее продолжительности, 
      // оставляя 10% в качестве паузы
      tone(buzzer, Melody[thisNote], noteDuration * 0.9);
      // Выдерживаем время продолжительности текущей ноты, 
      // прежде чем играть следующую ноту
      delay(noteDuration);
      // Останавливаем генерацию сигнала перед следующей нотой
      noTone(buzzer);
   }
}

// ******************************************************** Walk_Sounds.cpp ***
