/** KRUTJAK-SLAVE-PRO_MINI                           *** define_slave_kru.h ***
 * 
 * Определить переменные и константы исполнительной системы паровозика "КРУТЯК"
 * 
 * v3.3, 26.04.2024                                   Автор:      Труфанов В.Е.
 * Copyright © 2024 tve                               Дата создания: 16.04.2024
**/

// ИСКР - исполнительная система паровозика "КРУТЯК"
// УПС  - управляющая система

#ifndef define_slave_kru
#define define_slave_kru
#pragma once            

#define modeDebug  0              // отладочный режим на Arduino Uno
#define modeWork   1              // рабочий режим на Arduino Pro Mini
const int ModeSlave = modeDebug; // modeWork;   // текущий режим 

#define sw3_TX     3        // последовательный порт: TX=3 (зеленый)
#define sw4_RX     4        // последовательный порт: RX=4 (желтый)
#define DIR_PIN    6        // направление движения мотора 6 (белый)
#define PWM_PIN    7        // ШИМ-сигнал на мотор (0-255) 7 (синий)

#define LEDPIN    13        // контакт контрольного светодиода
bool doBurns=false;         // состояние контрольного светодиода

// Объявляем программный последовательный порт с RX (желтый)=4, TX (зеленый)=3
SoftwareSerial serialSlave(sw4_RX,sw3_TX); 

volatile char simb;               // последний принятый символ от управляющей системы
String command="00";              // последняя принятая команда управляющей системы
String strData = "";              // принятая последовательность символов
String strInfo = "";              // последовательность символов для отправки в УПС
bool recievedFlag = false;        // флаг завершения сборки командной последовательности
int reskom=0;                     // состояние ИСКР после выполнения действия по команде

// Определяем контрольные значения ШИМ
#define MAX_SPEED      255        // максимум
#define START_SPEED    101        // стартовая скорость
#define MIN_SPEED       64        // минимум 
#define DELTA_SPEED     17        // интервал изменения скорости 
#define MS_TIME         20        // моторная задержка
#define forward          0        // направление движения = "вперёд" 
#define back             1        // направление движения = "назад" 

// Данные о напряжении батареи и мощности двигателя
float  VccSlave=0.0;              // напряжение питания Slave
float  PwrSlave=0.0;              // мощность ШИМ на моторе
byte currShim;                    // текущий ШИМ на мотор
byte currDir;                     // текущее направление движения мотора

String sVcc;                      // представление напряжения в строке с 2 знаками после зпт     
String sPwr;                      // представление мощности в строке с 2 знаками после зпт     
String sDir;                      // направление движения     
String sShim;                     // ШИМ на контакте     

#endif

// ***************************************************** define_slave_kru.h ***
