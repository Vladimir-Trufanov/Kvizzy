/** Arduino C/C++ ********************************** Test06_Obmen_Esp32.ino ***
 * 
 *                Выполнить проверку последовательного синхронного обмена между 
 *                 ESP32-CAM (Slave-партнер) и Arduino Pro Mini (Master-мастер) 
 *                                               
 * v1.0, 02.09.2024                                   Автор:      Труфанов В.Е.
 * Copyright © 2024 tve                               Дата создания: 02.09.2024
 * 
 * Тест работает следующим образом:
 * 
 * 1. Мастер чистит обе строки дисплея и ожидает 30 секунд для подготовки 
 *    к работе партнера.
 * 
 * 2. Master отправляет команду-символ "#" партнеру, показывает команду в первой 
 *    строке дисплея и ждет ответа от партнера.
 *    
 * 3. Партнер всегда ждет команду от мастера. Получив команду-символ, возвращает 
 *    его мастеру и дублирует информацию в стандартный последовательный порт.
 *    
 * 4. Мастер, получив ответ от партнера, выводит его во второй строке дисплея и
 *    ждет 30 секунд.
 *    
 * 5. Master чистит экран дисплея  и отправляет следующую команду-символ "@" 
 *    партнеру, показывает команду в первой cтроке дисплея и ждет ответа от 
 *    партнера. Так обмен продолжается.
 *    
 * То есть мастер поочередно отправляет команды "#" или "@" партнеру, а партнер 
 * возвращает переданный символ.
 *    
 **/

// Инициируем прием кодов 
int incomingByte = 0; 
char character = '~';
//String data = "";

// Создаем объект для работы через первый аппаратный последовательный порт
//include <HardwareSerial.h>
//HardwareSerial MySerial(1);


//void setup() 
//{
   // Открываем аппаратный последовательный порт
   // и назначаем пины 
   //MySerial.begin(115200,SERIAL_8N1,16,17);
//}

void setup() 
{
   Serial.begin(115200);  // opens serial port, sets data rate to 115200 bps
   pinMode(4,OUTPUT);   // "вспышка"
   digitalWrite(4,HIGH);
   delay(1000);
   digitalWrite(4,LOW);
}

void loop() 
{

  // Проверяем, есть ли байты в последовательном порту
  if (Serial.available() > 0) 
  {
   digitalWrite(4,HIGH);
   delay(1000);
   digitalWrite(4,LOW);
      // Читаем очередной байт
      incomingByte = Serial.read();
      // Получаем по коду символ
      char character = (char)incomingByte;
      Serial.print(character);
      // Выводим код полученного символа
      //Serial.print("Получен: ");
      //Serial.println(incomingByte);
      // Если не "перевод строки" то складываем
      // символ в формируемую строку
      //if (character != '\n')
      //{
      //   data.concat(character);
      //}
      // Иначе выводим текст
      //else
      //{
         //// Выводим текст в последовательный порт
         //Serial.println(data);
         // Готовим прием нового текста
         //data = "";
      //}
  }
}
// ************************************************* Test06_Obmen_Esp32.ino ***
