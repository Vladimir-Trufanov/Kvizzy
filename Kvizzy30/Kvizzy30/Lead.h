/** Arduino, Esp32-CAM ******************************************** Lead.h ***
 * 
 *        Выбрать накопившиеся json-сообщения о состоянии устройств контроллера 
 *            и показаниях датчиков из очереди и отправить их на страницу State 
 * 
 * v3.3.3, 27.12.2024                                 Автор:      Труфанов В.Е.
 * Copyright © 2024 tve                               Дата создания: 26.10.2024
**/

#pragma once            
#include <Arduino.h>

// ****************************************************************************
// *             Выполнить нечастую трассировку успешных запросов             *
// ****************************************************************************
// Инициируем счетчик нечастой трассировки успешных запросов
int iTrass=0;
void saytrass(String httpText, int nTrass=5) 
{
   // Трассировочное сообщение в очередь
   iTrass++;
   if (iTrass>nTrass)
   {
      iTrass=0;
      Serial.print(iLead); Serial.print("-Lead: "); Serial.println(httpText);
   }
}

// * Задача FreRTOS ***********************************************************
// *      Отправить регулярный (по таймеру) запрос контроллера на изменение   *
// *                  состояний его устройств к странице Lead                 *
// ****************************************************************************
void vLead(void* pvParameters) 
{
   // Готовим запрос к странице Lead
   String ehttp=shttp+"Lead/";                   // запрос
   String queryString = "cycle="+String(iLead);  // параметры
   tQueryMessage tQuery;                         // ответ
   String httpText;                              // текст ответного сообщения
   // Зацикливаем задачу
   for (;;)
   {
      iLead++;
      // Делаем запрос к Lead
      tQuery = postQuery(ehttp, queryString);
      // Обрабатываем успешный запрос 
      if (tQuery.httpCode == HTTP_CODE_OK) 
      {
         httpText=tQuery.httpText; 
         saytrass(httpText,0);  
      }
      // Реагируем на ошибку Post-запроса
      {
         // Пока ничего не делаем, сообщения об ошибках отправлены в postQuery   
      }
      // Отмечаем флагом, что цикл задачи успешно завершен   
      fwdtLead = true;
      // Пропускаем интервал 897 мсек
      vTaskDelay(897/portTICK_PERIOD_MS); 
   }
}

// **************************************************************** Lead.h ***
